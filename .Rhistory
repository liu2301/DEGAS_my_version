# Visualization
p <- ggboxplot(AD_prediction, x='Pat', y='Dis', color='Pat', palette = "jco",
facet.by='CT', ylim=c(-0.8, 0.8))
p + geom_text(
data = AD_fold_change,
mapp = aes(x = -Inf, y = -Inf, label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(method='t.test')
ggsave("prediction.png")
# Visualization
p <- ggboxplot(AD_prediction, x='Pat', y='Dis', color='Pat', palette = "jco",
facet.by='CT', ylim=c(-0.8, 0.8))
p + geom_text(
data = AD_fold_change,
mapp = aes(x = -Inf, y = -Inf, label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(method='p.val')
ggsave("prediction.png")
# Visualization
p <- ggboxplot(AD_prediction, x='Pat', y='Dis', color='Pat', palette = "jco",
facet.by='CT', ylim=c(-0.8, 0.8))
p + geom_text(
data = AD_fold_change,
mapp = aes(x = -Inf, y = -Inf, label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(method='t.test')
ggsave("prediction.png")
# Visualization
p <- ggboxplot(AD_prediction, x='Pat', y='Dis', color='Pat', palette = "jco",
facet.by='CT', ylim=c(-0.8, 0.8))
p + geom_text(
data = AD_fold_change,
mapp = aes(label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(method='t.test')
library("ggplot2")
library("ggpubr")
library("tidyverse")
# load prediction results
AD_prediction <- read.csv('AD_prediction.csv', row.names=1)
AD_summary <- AD_prediction %>% group_by(CT, Pat) %>% summarize_at(vars(Dis), list(Dis.Mean=mean))
AD_summary <- AD_summary %>% group_by(CT) %>% mutate(dis_fold_change = (Dis.Mean[Pat=="AD"] - abs(Dis.Mean)) / Dis.Mean[Pat=="AD"])
AD_fold_change <- data.frame(AD_summary[-c(1, 3, 5, 7, 9), c(1, 4)])
AD_fold_change
# Visualization
p <- ggboxplot(AD_prediction, x='Pat', y='Dis', color='Pat', palette = "jco",
facet.by='CT', ylim=c(-0.8, 0.8))
p + geom_text(
data = AD_fold_change,
mapp = aes(x = -Inf, y = -Inf, label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(method='t.test')
ggsave("prediction.png")
paste0("sd", 32)
library("ggplot2")
library("ggpubr")
library("tidyverse")
# load prediction results
Sim_prediction <- read.csv('Prediction.csv', row.names=1)
Sim_prediction
# Visualization
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + stat_compare_means(method='t.test')
compare_means(DisSim1 ~ CT, data = Sim_prediction)
compare_means(DisSim1 ~ CT, data = Sim_prediction, method='t.test')
# Visualization
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + stat_compare_means(DisSim1 ~ CT, data = Sim_prediction, method='t.test')
# Visualization
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + stat_compare_means(DisSim1 ~ CT, method='t.test')
help("stat_compare_means")
my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim1), list(DisSim1.Mean=mean))
Sim_summary <- Sim_summary %>% group_by(CT) %>% mutate(dis_fold_change = (DisSim.Mean[CT==1] - abs(DisSim.Mean)) / DisSim.Mean[CT==1])
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim1), list(DisSim1.Mean=mean))
Sim_summary <- Sim_summary %>% group_by(CT) %>% mutate(dis_fold_change = (DisSim1.Mean[CT==1] - abs(DisSim1.Mean)) / DisSim1.Mean[CT==1])
Sim_summary
Sim_summary <- Sim_summary %>% mutate(dis_fold_change = (DisSim1.Mean[CT==1] - abs(DisSim1.Mean)) / DisSim1.Mean[CT==1])
Sim_summary
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim1), list(DisSim1.Mean=mean))
Sim_summary <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim1.Mean[CT==1] - abs(DisSim1.Mean)) / DisSim1.Mean[CT==1]))
Sim_summary
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim1), list(DisSim1.Mean=mean))
Sim_fold_change <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim1.Mean[CT==1] - abs(DisSim1.Mean)) / DisSim1.Mean[CT==1]))
my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = -Inf, y = -Inf, label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(method='t.test')
my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = -Inf, y = -Inf, label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = -Inf, y = -Inf, label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
library("ggplot2")
library("ggpubr")
library("tidyverse")
# load prediction results
Sim_prediction <- read.csv('Prediction.csv', row.names=1)
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim2), list(DisSim2.Mean=mean))
Sim_fold_change <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim2.Mean[CT==1] - abs(DisSim2.Mean)) / DisSim2.Mean[CT==1]))
my_comparisons <- list( c("4", "1"), c("4", "2"), c("4", "3") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim2', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim1), list(DisSim1.Mean=mean))
Sim_fold_change <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim1.Mean[CT==4] - abs(DisSim1.Mean)) / DisSim1.Mean[CT==4]))
my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim1), list(DisSim1.Mean=mean))
Sim_fold_change <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim1.Mean[CT==1] - abs(DisSim1.Mean)) / DisSim1.Mean[CT==1]))
my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim2), list(DisSim2.Mean=mean))
Sim_fold_change <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim2.Mean[CT==4] - abs(DisSim2.Mean)) / DisSim2.Mean[CT==4]))
my_comparisons <- list( c("4", "1"), c("4", "2"), c("4", "3") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim2', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
Sim_summary
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim1), list(DisSim1.Mean=mean))
Sim_fold_change <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim1.Mean[CT==1] - abs(DisSim1.Mean)) / abs(DisSim1.Mean[CT==1])))
my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim1', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
my_comparisons <- list( c("4", "1"), c("4", "2"), c("4", "3") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim2', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim2), list(DisSim2.Mean=mean))
Sim_fold_change <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim2.Mean[CT==4] - abs(DisSim2.Mean)) / abs(DisSim2.Mean[CT==4])))
my_comparisons <- list( c("4", "1"), c("4", "2"), c("4", "3") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim2', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
library("ggplot2")
library("ggpubr")
library("tidyverse")
# load prediction results
AD_prediction <- read.csv('AD_prediction.csv', row.names=1)
AD_summary <- AD_prediction %>% group_by(CT, Pat) %>% summarize_at(vars(Dis), list(Dis.Mean=mean))
AD_summary <- AD_summary %>% group_by(CT) %>% mutate(dis_fold_change = (Dis.Mean[Pat=="AD"] - Dis.Mean) / abs(Dis.Mean[Pat=="AD"]))
AD_fold_change <- data.frame(AD_summary[-c(1, 3, 5, 7, 9), c(1, 4)])
AD_fold_change
# Visualization
p <- ggboxplot(AD_prediction, x='Pat', y='Dis', color='Pat', palette = "jco",
facet.by='CT', ylim=c(-0.8, 0.8))
p + geom_text(
data = AD_fold_change,
mapp = aes(x = -Inf, y = -Inf, label = paste0('fold_change = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(method='t.test')
ggsave("prediction.png")
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim2), list(DisSim2.Mean=mean))
Sim_fold_change <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim2.Mean[CT==4] - DisSim2.Mean) / abs(DisSim2.Mean[CT==4])))
my_comparisons <- list( c("4", "1"), c("4", "2"), c("4", "3") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim2', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
Sim_summary <- Sim_prediction %>% group_by(CT) %>% summarize_at(vars(DisSim3), list(DisSim3.Mean=mean))
Sim_fold_change <- data.frame(Sim_summary %>% mutate(dis_fold_change = (DisSim3.Mean[CT==4] - DisSim3.Mean) / abs(DisSim3.Mean[CT==4])))
my_comparisons <- list( c("4", "1"), c("4", "2"), c("4", "3") )
p <- ggboxplot(Sim_prediction, x='CT', y='DisSim3', color='CT', palette = "jco")
p + geom_text(
data = Sim_fold_change,
mapp = aes(x = c(1, 2, 3, 4), y = -Inf, label = paste0('FC = ', round(dis_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
) + stat_compare_means(comparisons=my_comparisons, method='t.test')
library("ggplot2")
library("ggpubr")
library("tidyverse")
# load prediction results
GBM_prediction <- read.csv('Prediction.csv', row.names=1)
GBM_prediction
# my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(Sim_prediction, x='Patient', y='Msenchymal', color='Patient', palette = "jco")
# my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(GBM_prediction, x='Patient', y='Msenchymal', color='Patient', palette = "jco")
p + stat_compare_means(method='t.test')
# my_comparisons <- list( c("1", "2"), c("1", "3"), c("1", "4") )
p <- ggboxplot(GBM_prediction, x='Patient', y='Mesenchymal', color='Patient', palette = "jco")
p + stat_compare_means(method='t.test')
my_comparisons <- list( c("MGH28", "MGH26"), c("MGH28", "MGH30"), c("MGH28", "MGH31") )
p <- ggboxplot(GBM_prediction, x='Patient', y='Mesenchymal', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
my_comparisons <- list(c("MGH28", "MGH26"), c("MGH28", "MGH30"), c("MGH28", "MGH31"),
c("MGH29", "MGH26"), c("MGH29", "MGH30"), c("MGH29", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Mesenchymal', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
my_comparisons <- list(c("MGH26", "MGH28"), c("MGH26", "MGH29"), c("MGH26", "MGH30"), c("MGH26", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Neural', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
my_comparisons <- list(c("MGH30", "MGH28"), c("MGH30", "MGH29"), c("MGH30", "MGH26"), c("MGH30", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Classical', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
Sim_summary
my_comparisons <- list(c("MGH26", "MGH28"), c("MGH26", "MGH29"), c("MGH26", "MGH30"), c("MGH26", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Proneural', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
GBM_summary <- GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Proneural, Mesenchymal),
list(Proneural.Mean=mean, Mesenchymal.Mean=mean))
GBM_summary
GBM_summary <- GBM_prediction %>% group_by(Patient) %>% summarize_at(
list(Proneural.Mean=mean, Mesenchymal.Mean=mean))
GBM_summary <- GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Mesenchymal),
list(Mesenchymal.Mean=mean))
GBM_summary
Mesenchymal <- GBM_summary[2] + GBM_summary[3]
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Mesenchymal),
list(Mesenchymal.Mean=mean)))
GBM_summary
GBM_summary$Mesenchymal.Mean[2] + GBM_summary$Mesenchymal.Mean[3]
Mesenchyma <- GBM_summary$Mesenchymal.Mean[2] + GBM_summary$Mesenchymal.Mean[3]
Others <- GBM_summary$Mesenchymal.Mean[1] + GBM_summary$Mesenchymal.Mean[4] + GBM_summary$Mesenchymal.Mean[5]
Otheres
Others
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Mesenchymal),
list(Mesenchymal.Mean=mean)))
Mesenchymal <- GBM_summary$Mesenchymal.Mean[2] + GBM_summary$Mesenchymal.Mean[3]
Others <- GBM_summary$Mesenchymal.Mean[1] + GBM_summary$Mesenchymal.Mean[4] + GBM_summary$Mesenchymal.Mean[5]
Mesenchymal_fold_change <- (Mesenchymal - Others) / Mesenchymal
Mesenchymal_fold_change
my_comparisons <- list(c("MGH28", "MGH26"), c("MGH28", "MGH30"), c("MGH28", "MGH31"),
c("MGH29", "MGH26"), c("MGH29", "MGH30"), c("MGH29", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Mesenchymal', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test') +
geom_text(
mapp = aes(x = -Inf, y = -Inf, label = paste0('FC = ', round(Mesenchymal_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
)
my_comparisons <- list(c("MGH28", "MGH26"), c("MGH28", "MGH30"), c("MGH28", "MGH31"),
c("MGH29", "MGH26"), c("MGH29", "MGH30"), c("MGH29", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Mesenchymal', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test') +
geom_text(
mapp = aes(x = 3, y = -Inf, label = paste0('FC = ', round(Mesenchymal_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
)
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Proneural),
list(Proneural.Mean=mean)))
GBM_summary$Proneural.Mean
GBM_summary$Proneural.Mean[2:]
GBM_summary$Proneural.Mean[2:5]
sum(GBM_summary$Proneural.Mean[2:5])
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Proneural),
list(Proneural.Mean=mean)))
Others <- sum(GBM_summary$Proneural.Mean[2:5])
Proneural_fold_change <- (GBM_summary$Proneural.Mean[1] - Others) / GBM_summary$Proneural.Mean[1]
my_comparisons <- list(c("MGH26", "MGH28"), c("MGH26", "MGH29"), c("MGH26", "MGH30"), c("MGH26", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Proneural', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test') +
geom_text(
mapp = aes(x = 3, y = -Inf, label = paste0('FC = ', round(Proneural_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
)
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Classical),
list(Classical.Mean=mean)))
GBM_summary
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Mesenchymal),
list(Mesenchymal.Mean=mean)))
Mesenchymal <- GBM_summary$Mesenchymal.Mean[2] + GBM_summary$Mesenchymal.Mean[3]
Others <- GBM_summary$Mesenchymal.Mean[1] + GBM_summary$Mesenchymal.Mean[4] + GBM_summary$Mesenchymal.Mean[5]
Mesenchymal_fold_change <- (Mesenchymal - Others) / abs(Mesenchymal)
my_comparisons <- list(c("MGH28", "MGH26"), c("MGH28", "MGH30"), c("MGH28", "MGH31"),
c("MGH29", "MGH26"), c("MGH29", "MGH30"), c("MGH29", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Mesenchymal', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test') +
geom_text(
mapp = aes(x = 3, y = -Inf, label = paste0('FC = ', round(Mesenchymal_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
)
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Proneural),
list(Proneural.Mean=mean)))
Others <- sum(GBM_summary$Proneural.Mean[2:5])
Proneural_fold_change <- (GBM_summary$Proneural.Mean[1] - Others) / abs(GBM_summary$Proneural.Mean[1])
my_comparisons <- list(c("MGH26", "MGH28"), c("MGH26", "MGH29"), c("MGH26", "MGH30"), c("MGH26", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Proneural', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test') +
geom_text(
mapp = aes(x = 3, y = -Inf, label = paste0('FC = ', round(Proneural_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
)
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Classical),
list(Classical.Mean=mean)))
Others <- sum(GBM_summary$Proneural) - GBM_summary$Classical.Mean[4]
Proneural_fold_change <- (GBM_summary$Proneural.Mean[4] - Others) / abs(GBM_summary$Proneural.Mean[4])
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Classical),
list(Classical.Mean=mean)))
Others <- sum(GBM_summary$Classical.Mean) - GBM_summary$Classical.Mean[4]
Proneural_fold_change <- (GBM_summary$Classical.Mean[4] - Others) / abs(GBM_summary$Classical.Mean[4])
my_comparisons <- list(c("MGH30", "MGH28"), c("MGH30", "MGH29"), c("MGH30", "MGH26"), c("MGH30", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Classical', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Classical),
list(Classical.Mean=mean)))
Others <- sum(GBM_summary$Classical.Mean) - GBM_summary$Classical.Mean[4]
Classical_fold_change <- (GBM_summary$Classical.Mean[4] - Others) / abs(GBM_summary$Classical.Mean[4])
my_comparisons <- list(c("MGH30", "MGH28"), c("MGH30", "MGH29"), c("MGH30", "MGH26"), c("MGH30", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Classical', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test')+
geom_text(
mapp = aes(x = 3, y = -Inf, label = paste0('FC = ', round(Classical_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
)
help(order)
order(GBM_prediction[:, c(3, 4, 5, 6)])
order(GBM_prediction[, c(3, 4, 5, 6)])
order(GBM_prediction[1, c(3, 4, 5, 6)])
apply(GBM_prediction[1, c(3, 4, 5, 6)], 1, order)
apply(GBM_prediction[1, c(3, 4, 5, 6)], 2, order)
apply(GBM_prediction[, c(3, 4, 5, 6)], 1, order)
apply(GBM_prediction[, c(3, 4, 5, 6)], 2, order)
apply(GBM_prediction[, c(3, 4, 5, 6)], 1, order)
t(apply(GBM_prediction[, c(3, 4, 5, 6)], 1, order))
GBM_rank <- GBM_prediction
GBM_rank[, c(3, 4, 5, 6)] <- t(apply(GBM_prediction[, c(3, 4, 5, 6)], 1, order))
GBM_rank
stack(GBM_rank)
stack(GBM_rank, select="Patient", drop=c("tSNE1", "tSNE2"))
stack(GBM_rank, select="Patient")
stack(GBM_rank, select=c("Proneural"))
stack(GBM_rank, select=c("Proneural", "Patient"))
View(GBM_rank)
cbind(GBM_rank[7], stack(GBM_rank[2:6]))
View(GBM_rank)
melt(data, id.var = c("Proneural", "Neural", "Classical", "Mesenchymal"), variable.name = 'CT')
install.packages(reshape2)
install.packages("reshape2")
library(reshape2)
melt(data, id.var = c("Proneural", "Neural", "Classical", "Mesenchymal"), variable.name = 'CT')
GBM_rank[2]
GBM_rank
cbind(GBM_rank[7], stack(GBM_rank[3:6]))
GBM_rank <- GBM_prediction
GBM_rank[, c(3, 4, 5, 6)] <- t(apply(GBM_prediction[, c(3, 4, 5, 6)], 1, order))
GBM_rank <- cbind(GBM_rank[7], stack(GBM_rank[3:6]))
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5))
ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5))
ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=NULL)
ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=False)
ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=FALSE)
ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=FALSE)
+ stat_compare_means(method='t.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=FALSE)
p + stat_compare_means(method='t.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=FALSE)
my_comparisons <- list(c("MGH26", "MGH28"), c("MGH26", "MGH29"), c("MGH26", "MGH30"), c("MGH26", "MGH31"))
p + stat_compare_means(comparisons=my_comparisions, method='t.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=FALSE)
my_comparisons <- list(c("MGH26", "MGH28"), c("MGH26", "MGH29"), c("MGH26", "MGH30"), c("MGH26", "MGH31"))
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=FALSE)
my_comparisons <- list(c("MGH26", "MGH28"), c("MGH26", "MGH29"), c("MGH26", "MGH30"), c("MGH26", "MGH31"))
p + stat_compare_means(comparisons=my_comparisons, method='p.val')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=FALSE)
my_comparisons <- list(c("MGH26", "MGH28"), c("MGH26", "MGH29"), c("MGH26", "MGH30"), c("MGH26", "MGH31"))
p + stat_compare_means(comparisons=my_comparisons, method='wilcox.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=FALSE)
my_comparisons <- list(c("Proneural", "Mesenchymal"))
p + stat_compare_means(comparisons=my_comparisons, method='wilcox.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), ylab=FALSE)
my_comparisons <- list(c("Proneural", "Mesenchymal"), c("Proneural", "Classical"), c("Classical", "Mesenchymal"))
p + stat_compare_means(comparisons=my_comparisons, method='wilcox.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), y.axis=NULL)
my_comparisons <- list(c("Proneural", "Mesenchymal"), c("Proneural", "Classical"), c("Classical", "Mesenchymal"))
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), x.axis=NULL)
my_comparisons <- list(c("Proneural", "Mesenchymal"), c("Proneural", "Classical"), c("Classical", "Mesenchymal"))
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), xlab=NULL)
my_comparisons <- list(c("Proneural", "Mesenchymal"), c("Proneural", "Classical"), c("Classical", "Mesenchymal"))
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), x.axis=FALSE)
my_comparisons <- list(c("Proneural", "Mesenchymal"), c("Proneural", "Classical"), c("Classical", "Mesenchymal"))
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
p <- ggboxplot(GBM_rank, x='ind', y='values', color='ind', palette = "jco",
facet.by='Patient', ylim=c(1, 5), x.axis=FALSE) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
my_comparisons <- list(c("Proneural", "Mesenchymal"), c("Proneural", "Classical"), c("Classical", "Mesenchymal"))
p + stat_compare_means(comparisons=my_comparisons, method='t.test')
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Mesenchymal),
list(Mesenchymal.Mean=mean)))
Mesenchymal <- GBM_summary$Mesenchymal.Mean[2] + GBM_summary$Mesenchymal.Mean[3]
Others <- GBM_summary$Mesenchymal.Mean[1] + GBM_summary$Mesenchymal.Mean[4] + GBM_summary$Mesenchymal.Mean[5]
Mesenchymal_fold_change <- (Mesenchymal - Others) / abs(Mesenchymal)
my_comparisons <- list(c("MGH28", "MGH26"), c("MGH28", "MGH30"), c("MGH28", "MGH31"),
c("MGH29", "MGH26"), c("MGH29", "MGH30"), c("MGH29", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Mesenchymal', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test') +
geom_text(
mapp = aes(x = 3, y = -Inf, label = paste0('FC = ', round(Mesenchymal_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
)
ggsave("Mesenchymal_box.png")
GBM_summary <- data.frame(GBM_prediction %>% group_by(Patient) %>% summarize_at(vars(Proneural),
list(Proneural.Mean=mean)))
Others <- sum(GBM_summary$Proneural.Mean[2:5])
Proneural_fold_change <- (GBM_summary$Proneural.Mean[1] - Others) / abs(GBM_summary$Proneural.Mean[1])
my_comparisons <- list(c("MGH26", "MGH28"), c("MGH26", "MGH29"), c("MGH26", "MGH30"), c("MGH26", "MGH31"))
p <- ggboxplot(GBM_prediction, x='Patient', y='Proneural', color='Patient', palette = "jco")
p + stat_compare_means(comparisons=my_comparisons, method='t.test') +
geom_text(
mapp = aes(x = 3, y = -Inf, label = paste0('FC = ', round(Proneural_fold_change, digits=3))),
hjust   = -0.1,
vjust   = -1
)
ggsave("Proneural_box.png")
